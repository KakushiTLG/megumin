import items
import dogs
@bot.message_handler(commands=['top'])
def topLvl(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT lvl, username FROM users ORDER BY lvl DESC Limit 5"
        cursor.execute(sql)
        result = cursor.fetchall()
        top = ""
        count = 0
        for dict in result:
            count += 1
            if count == 1:
                id = "ü•á"
            elif count == 2:
                id = "ü•à"
            elif count == 3:
                id = "ü•â"
            elif count == 4:
                id = "4‚É£"
            elif count == 5:
                id = "5‚É£"
            top += str(id) + str(dict['username']) + " - " + str(dict['lvl']) + ' lvl' + str(id) + '\n'
        sql = "SELECT points, username FROM users ORDER BY points DESC Limit 5"
        cursor.execute(sql)
        pointres = cursor.fetchall()
        topPoints = ""
        countPoints = 0
        for dict in pointres:
            countPoints += 1
            if countPoints == 1:
                idp = "ü•á"
            elif countPoints == 2:
                idp = "ü•à"
            elif countPoints == 3:
                idp = "ü•â"
            elif countPoints == 4:
                idp = "4‚É£"
            elif countPoints == 5:
                idp = "5‚É£"
            topPoints += str(idp) + str(dict['username']) + " - " + str(dict['points']) + ' points' + str(idp) + '\n'
        sql = "SELECT tempPts, username FROM users ORDER BY tempPts DESC Limit 5"
        cursor.execute(sql)
        temppts = cursor.fetchall()
        topPts = ""
        countPts = 0
        for dict in temppts:
            countPts += 1
            if countPts == 1:
                idpts = "ü•á"
            elif countPts == 2:
                idpts = "ü•à"
            elif countPts == 3:
                idpts = "ü•â"
            elif countPts == 4:
                idpts = "4‚É£"
            elif countPts == 5:
                idpts = "5‚É£"
            topPts += str(idpts) + str(dict['username']) + " - " + str(dict['tempPts']) + '‚ùÑ \n'
        
        
        db.close()
    bot.reply_to(m, "‚ùÑ–¢–û–ü –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—é‚ùÑ\n" + str(top) + "\n \n‚ùÑ–¢–û–ü –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –ø–æ–∏–Ω—Ç–∞–º‚ùÑ\n" + str(topPoints) + "\n‚ùÑ–¢–û–ü –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —Å–Ω–µ–∂–∏–Ω–∫–∞–º‚ùÑ\n" + str(topPts))
    
        #(fond * 0.3) + (lvl * 1.5) + (players * 0.5)
        
        
@bot.message_handler(commands=['promo'])
def promo(m):
    if len(m.text.split(' ')) > 1:
        text = m.text.replace('/promo ', '', 1)
        db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
        with db.cursor() as cursor:
            sql = "SELECT `status`, `count` FROM `promo` WHERE `promo` = %s AND `status` = 0"
            cursor.execute(sql, (str(text)))
            result = cursor.fetchone()
            if result:
                status = result['status']
                count = result['count']
                if status == 0:
                    sql = "UPDATE `promo` SET `status` = 1 WHERE `promo` = %s"
                    cursor.execute(sql, (text))
                    db.commit()
                    sql = "UPDATE `users` SET `points` = points + %s WHERE `user_id` = %s"
                    cursor.execute(sql, (int(count), str(m.from_user.id)))
                    db.commit()
                    bot.reply_to(m, "–í—ã —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å—É–º–º—É " + str(count) + " –ø–æ–∏–Ω—Ç–æ–≤.")
                    db.close()
                else:
                    bot.reply_to(m, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥.")
                    db.close()
                    return
            else:
                bot.reply_to(m, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥.")
                db.close()
                return
    else:
        bot.reply_to(m, "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ - –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –ø–æ—Å–ª–µ /promo")
        return
        
@bot.message_handler(commands=['gpromo'])
def genPromo(m):
    if str(m.from_user.id) in owner:
        pass
    else:
        bot.reply_to(m, "–î–∞ –Ω–µ—Ç, –¥—Ä—É–∂–æ–∫, —Ç–∞–∫ –Ω–µ –ø–æ–π–¥–µ—Ç...")
        return
    symbol = 'QWERTYUIOPASDFGHJKLZXCVBNM1234567890'
    text = ''
    for i in range(10):
        text += random.choice(symbol)
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "INSERT INTO promo (promo, count, status) VALUES (%s, 100, '0')" 
        cursor.execute(sql, (str(text)))
        db.commit()
        db.close()
    gpromo = bot.send_message(chancechat, "‚ùÑCold promo‚ùÑ\n*{}*".format(str(text)), None, None, None,'markdown')
    bot.pin_chat_message(chancechat, gpromo.message_id)
@bot.message_handler(commands=['createpromo'])
def createPromo(m):
    if str(m.from_user.id) in owner:
        pass
    else:
        bot.reply_to(m, "–î–∞ –Ω–µ—Ç, –¥—Ä—É–∂–æ–∫, —Ç–∞–∫ –Ω–µ –ø–æ–π–¥–µ—Ç...")
        return
    if len(m.text.split(' ')) > 1:
        try:
            text = m.text.replace('/createpromo ', '', 1).split(':')
            promo = text[0]
            count = text[1]
            db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
            with db.cursor() as cursor:
                sql = "INSERT INTO promo (promo, count, status) VALUES (%s, %s, '0')" 
                cursor.execute(sql, (str(promo), int(count)))
                db.commit()
                db.close()
            bot.reply_to(m, "Promo created.")
        except:
            bot.reply_to(m, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
    else:
        bot.reply_to(m, "–í–≤–µ–¥–∏—Ç–µ /createpromo text:count")
        
        
@bot.message_handler(commands=['myrefs'])
def referals(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `username` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        refer = str(result['username'])
        sql = "SELECT `username`, `lvl` FROM `users` WHERE `ref` = %s"
        cursor.execute(sql, (refer))
        referal = cursor.fetchall()
    db.close()
    if referal:
        pass
    else:
        bot.reply_to(m, "–£ –≤–∞—Å –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.")
        return
    referals = "\n"
    for dict in referal:
        referals += dict['username'] + " - " + str(dict['lvl']) + ' lvl \n'
        print(referals)
    if referals:
        bot.reply_to(m, "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, " + str(refer) + ": \n" + str(referals))
    else:
        referals = '–£ –≤–∞—Å –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤'
        
        
        
@bot.message_handler(commands=['pay'])
def pay(m):
    if len(m.text.split(' ')) > 1:
        text = m.text.replace('/pay ', '', 1).split(':')
        payfrom = m.from_user.id
        payto = str(text[0])
        paySum = int(text[1])
        if paySum >= 1:
            pass
        else:
            bot.reply_to(m, "^=^")
            return
    else:
        bot.reply_to(m, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /pay [–Ω–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞] [—Å—É–º–º–∞]")
        return
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `points` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (payfrom))
        result = cursor.fetchone()
        currentPoint = str(result['points'])
        if int(currentPoint) > int (paySum):
            sql = "SELECT `points` FROM `users` WHERE `username` = %s"
            cursor.execute(sql, (str(payto)))
            paytoCheck = cursor.fetchone()
            if paytoCheck:
                pass
            else:
                bot.reply_to(m, "–ù–µ—Ç –∏–≥—Ä–æ–∫–∞ —Å —Ç–∞–∫–∏–º –Ω–∏–∫–Ω–µ–π–º–æ–º")
                return
            try:
                sql = "UPDATE `users` SET `points` = points - %s WHERE `user_id` = %s"
                cursor.execute(sql, (int(paySum), payfrom))
                db.commit()
                sql = "UPDATE `users` SET `points` = points + %s WHERE `username` = %s"
                cursor.execute(sql, (int(paySum), str(payto)))
                db.commit()
                db.close()
            except:
                bot.reply_to(m, "–û—à–∏–±–∫–∞ 2")
                db.close()
                return
            bot.reply_to(m, "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ " + str(paySum) + " –ø–æ–∏–Ω—Ç–æ–≤ –∏–≥—Ä–æ–∫—É —Å –Ω–∏–∫–æ–º " + str(payto) + ".")
        else:
            bot.reply_to(m, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤.")
                
                

@bot.message_handler(commands=['ref'])
def ref(m):
    if len(m.text.split(' ')) > 1:
        text = m.text.replace('/ref ', '', 1)
        db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
        with db.cursor() as cursor:
            sql = "SELECT * FROM `users` WHERE `user_id` = %s"
            cursor.execute(sql, (m.from_user.id))
            result = cursor.fetchone()
            ref = result['ref']
            if ref:
                bot.reply_to(m, "–¢—ã —É–∂–µ –≤—ã–±–∏—Ä–∞–ª —Å–µ–±–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞")
                db.close()
                return
            else:
                if text == result['username']:
                    bot.reply_to(m, "–ù–µ—Ö–æ—Ä–æ—à–æ –¥–µ–ª–∞—Ç—å —Å–µ–±—è —Å–≤–æ–∏–º –∂–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º")
                    db.close()
                    return
                else:
                    try:
                        sql = "SELECT username FROM users WHERE username = %s"
                        cursor.execute(sql, (text))
                        usern = cursor.fetchone()
                        if usern:
                            pass
                        else:
                            bot.reply_to(m, "–û—à–∏–±–∫–∞. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º —Ä–µ—Ñ–µ—Ä–∞.")
                            db.close()
                            return
                        sql = "UPDATE `users` SET `ref` = %s WHERE `user_id` = %s"
                        cursor.execute(sql, (str(text), m.from_user.id))
                        db.commit()
                        sql = "UPDATE `users` SET `points` = points + 100 WHERE `user_id` = %s"
                        cursor.execute(sql, (m.from_user.id))
                        db.commit()
                        sql = "UPDATE `users` SET `points` = points + 200 WHERE `username` = %s"
                        cursor.execute(sql, (text))
                        db.commit()
                        db.close()
                        bot.reply_to(m, "–¢—ã —Å—Ç–∞–ª —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º " + text + ". –†–µ—Ñ–µ—Ä–∞–ª –∏ —Ä–µ—Ñ–µ—Ä –ø–æ–ª—É—á–∏–ª–∏ 100 –∏ 200 –ø–æ–∏–Ω—Ç–æ–≤.")
                    except:
                        bot.reply_to(m, "–û—à–∏–±–∫–∞.")
    else:
        bot.reply_to(m, "–í–≤–µ–¥–∏—Ç–µ /ref [–Ω–∏–∫–Ω–µ–π–º —Ä–µ—Ñ–µ—Ä–∞]")
                    

def profileBeta(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT * FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        if result:
            print(result)
            user_id = result['id']
            username = result['username']
            exp = result['exp']
            lvl = int(result['lvl'])
            points = result['points']
            atk = result['atk']
            hp = result['hp']
            fatk = result['fatk']
            creet = result['creet']
            local = int(result['local'])
            ref = result['ref']
            krazha = result['krazha']
            nowhp = int(result['nowhp'])
            frakaName = result['frakaName']
            frakaStatus = int(result['frakaStatus'])
            tempPts = int(result['tempPts'])
            frakaBonus = int(result['frakaBonus'])
            itemNow = int(result['item'])
            itemn = items.item(itemNow)
            bankNo = int(result['bankNo'])
            bankInv = int(result['bankInv'])
            if itemn:
                pass
            else:
                itemn = "–ù–∏—á–µ–≥–æ"
            if frakaStatus == 3:
                notif = "‚ö†Ô∏è–í—ã –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é " + str(frakaName) + "!\n –î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–ø—Ä–æ—Å–∞ - /f_accept .\n –î–ª—è –æ—Ç–∫–∞–∑–∞ - /f_cancel‚ö†Ô∏è"
            else:
                notif = ""
            if ref:
                ref = result['ref']
            else:
                ref = '–û—Ç—Å—É—Å—Ç–≤—É–µ—Ç'
            if frakaBonus > 0:
                frakabonus = str(frakaBonus) + "pts/h"
            else:
                frakabonus = "0"
        else:
            sql = "INSERT INTO users (username, user_id, lvl, points, atk, hp) VALUES (%s, %s, '1', '0', '25', '25')"
            cursor.execute(sql, (m.from_user.username, m.from_user.id))
            db.commit()
            db.close()
            user_id = '–ú–æ–º–µ–Ω—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.'
            username = m.from_user.username
            lvl = int('1')
            points = int('0')
            atk = 12
            hp = 12
            exp = 0
            fatk = 10
            creet = 5
            local = 1
            nowhp = 12
            tempPts = 0
            frakabonus = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            ref = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
    needexp = int(lvl) * 100
    if str(m.from_user.id) in donators:
        donate = '‚úÖ–ê–∫—Ç–∏–≤–µ–Ω'
    else:
        donate = '‚ùå'
    if bankNo != user_id:
        bankNo = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    elif bankNo == user_id:
        bankNo = "–ï—Å—Ç—å"
    if local == 1:
        location = "Respawn"
        if (lvl >= 5):
            locinfo = "\nüÜï–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–æ–∫–∞—Ü–∏—è ''–¢–∞–∫—Å–æ–ø–∞—Ä–∫''! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /next_location –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞üÜï"
        else:
            locinfo = ""
    elif local == 2:
        location = "–¢–∞–∫—Å–æ–ø–∞—Ä–∫"
        if (lvl >= 7):
            locinfo = "\nüÜï–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–æ–∫–∞—Ü–∏—è ''Dungeon''! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /next_location –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞üÜï"
        else:
            locinfo = ""
    elif local == 3:
        location = "Dungeon"
        if (lvl >= 8):
            locinfo = "\nüÜï–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–æ–∫–∞—Ü–∏—è ''–ú—ç—Ä–∏—è''! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /next_location –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞üÜï"
        else:
            locinfo = ""
    elif local == 4:
        location = "–ú—ç—Ä–∏—è"
        locinfo = ""
    elif local == 5:
        location = "–ó–∞—Å–Ω–µ–∂–µ–Ω–Ω–∞—è –∫–∞–≤–∞–π–Ω—è"
        #if (lvl >= 10):
            #locinfo = "\nüÜï–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–æ–∫–∞—Ü–∏—è ''–∑–∞—Å–Ω–µ–∂–µ–Ω–Ω–∞—è –∫–∞–≤–∞–π–Ω—è''! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /next_location –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞üÜï"
        #else:
        locinfo = ""
        if (int(frakaStatus) == 1) or (int(frakaStatus) == 2):
            frakaName = frakaName
        else:
            frakaName = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        if itemNow == 999:
            stats = "‚ùÑ–ü—Ä–æ—Ñ–∏–ª—å‚ùÑ \n \nüìò–í–∞—à–∞ –∫–ª–∏–∫—É—Ö–∞ - " + str(username) + "\nüìï–ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä - " + str(user_id) + "\nüî∞–ü–∏–¥–æ—Ä-—Å—Ç–∞—Ç—É—Å -  ‚úÖ–ê–∫—Ç–∏–≤–µ–Ω"
            profilemsg = bot.reply_to(m, stats)
            return
    if lvl >= 2 :
        stats = "‚ÑπÔ∏è–ü—Ä–æ—Ñ–∏–ª—å‚ÑπÔ∏è \n \nüìò–í–∞—à –Ω–∏–∫–Ω–µ–π–º - " + str(username) + "\nüìï–í–∞—à ID - " + str(user_id) + "\nüî∞–î–æ–Ω–∞—Ç-—Å—Ç–∞—Ç—É—Å - " + str(donate) + "\nüìí–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤ - " + str(points) + "" + "\n‚≠êÔ∏è–û–ø—ã—Ç: " + str(exp) + " / {0} \nüìó–í–∞—à —É—Ä–æ–≤–µ–Ω—å - " + str(lvl) + "\n‚óªÔ∏è–í–∞—à —Ä–µ—Ñ–µ—Ä–µ—Ä: " + str(ref) + "\nüì°–õ–æ–∫–∞—Ü–∏—è - " + str(location) + "\nüìì–§—Ä–∞–∫—Ü–∏—è: " + str(frakaName) + "\nüí∏–î–æ—Ö–æ–¥ —Å —Ñ—Ä–∞–∫—Ü–∏–∏: " + str(frakabonus) + "\nüîë–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è —è—á–µ–π–∫–∞: " + str(bankNo) + "\nüí¥–¢–µ–∫—É—â–∏–π –¥–µ–ø–æ–∑–∏—Ç: " + str(bankInv) + "\n" + str(locinfo) + "\n" + str(notif) + "\n    /myrefs        /shop        /stats"
        profilemsg = bot.reply_to(m, stats.format(str(needexp)))
    else:
        stats = "‚ÑπÔ∏è–ü—Ä–æ—Ñ–∏–ª—å‚ÑπÔ∏è \n \nüìò–í–∞—à –Ω–∏–∫–Ω–µ–π–º - " + str(username) + "\nüìï–í–∞—à ID - " + str(user_id) + "\nüî∞–î–æ–Ω–∞—Ç-—Å—Ç–∞—Ç—É—Å - " + str(donate) + "\nüìí–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤ - " + str(points) + " \n‚≠êÔ∏è–û–ø—ã—Ç: " + str(exp) + " / {0} \nüìó–í–∞—à —É—Ä–æ–≤–µ–Ω—å - " + str(lvl) + "\n‚óªÔ∏è–í–∞—à —Ä–µ—Ñ–µ—Ä–µ—Ä: " + str(ref) + "\n" + str(notif) + "\n          /myrefs              /giveaway"
        profilemsg = bot.reply_to(m, stats.format(str(needexp)))
    
    
    



@bot.message_handler(commands=['stats'])
def stats(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT * FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        if result:
            print(result)
            user_id = result['id']
            username = result['username']
            exp = result['exp']
            lvl = int(result['lvl'])
            points = result['points']
            atk = result['atk']
            hp = result['hp']
            fatk = result['fatk']
            creet = result['creet']
            local = int(result['local'])
            ref = result['ref']
            krazha = result['krazha']
            nowhp = int(result['nowhp'])
            frakaName = result['frakaName']
            frakaStatus = int(result['frakaStatus'])
            tempPts = int(result['tempPts'])
            frakaBonus = int(result['frakaBonus'])
            itemNow = int(result['item'])
            itemn = items.item(itemNow)
            azart = int(result['azart'])
            dog = result['dog']
            dogLvl = int(result['dogLvl'])
            dogAtk = int(result['dogAtk'])
            dogHp = int(result['dogHp'])
            dogFatk = int(result['dogFatk'])
            dogCreet = int(result['dogCreet'])
            dogEat = int(result['dogEat'])
            db.close()
            if lvl >= 2:
                pass
            else:
                bot.reply_to(m, "–¢–µ–±–µ —Å—é–¥–∞ —Ä–∞–Ω–æ")
                return
            if lvl >= 2 :
                if nowhp > hp:
                    nowhp = hp
            else:
                pass
            BM = int(atk + hp + (((fatk/100) + (creet/100)) * 10))
            stats = bot.reply_to(m, "\nüí™–û—á–∫–∏ –ë–æ–µ–≤–æ–π –ú–æ—â–∏ - " + str(BM) + "\n‚úä–í —Ä—É–∫–µ - " + str(itemn) + "\nüí¢–í–∞—à–∞ –∞—Ç–∞–∫–∞ - " + str(atk) + "\n‚ù§Ô∏è–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ - " + str(nowhp) + "/" + str(hp) + "\nü¶Ä–®–∞–Ω—Å –ø–µ—Ä–≤–æ–π –∞—Ç–∞–∫–∏ - " + str(fatk) + "% \nüí•–®–∞–Ω—Å –∫—Ä–∏—Ç–∞ - " + str(creet) + "% \nü§õ–ù–∞–≤—ã–∫ –∫—Ä–∞–∂–∏ - " + str(krazha) + "\nüé∞–ù–∞–≤—ã–∫ –∞–∑–∞—Ä—Ç–∞ - " + str(azart) + "/5 lvl \n–ü–æ–º–æ—â–Ω–∏–∫: " + str(dog) + "\n–≠–Ω–µ—Ä–≥–∏—è –ø–æ–º–æ—â–Ω–∏–∫–∞: " + str(dogEat) + "/100\n–£—Ä–æ–≤–µ–Ω—å –ø–æ–º–æ—â–Ω–∏–∫–∞: " + str(dogLvl) + "\n+{}Atk \n+{}Hp \n+{}%Fatk \n+{}%Creet".format(dogAtk, dogHp, dogFatk, dogCreet))
            return










@bot.message_handler(commands=['seeprofile'])
def profileAdm(m):
    if str(m.from_user.id) in owner:
        if len(m.text.split(' ')) > 1:
            nickn = m.text.replace('/seeprofile ', '', 1)
            db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
            with db.cursor() as cursor:
                sql = "SELECT * FROM `users` WHERE `username` = %s"
                cursor.execute(sql, (nickn))
                result = cursor.fetchone()
                if result:
                    user_id = result['id']
                    username = result['username']
                    exp = result['exp']
                    lvl = result['lvl']
                    points = result['points']
                    atk = result['atk']
                    hp = result['hp']
                    needexp = int(lvl) * 100
                    statsAdm = "üï¥–ü—Ä–æ—Ñ–∏–ª—åüï¥ \n \nüìò–í–∞—à –Ω–∏–∫–Ω–µ–π–º - " + str(username) + "\nüìï–í–∞—à ID - " + str(user_id) + "\nüìí–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤ - " + str(points) + "\n‚≠êÔ∏è–û–ø—ã—Ç: " + str(exp) + " / {0} \nüìó–í–∞—à —É—Ä–æ–≤–µ–Ω—å - " + str(lvl)
                    profileAdm = bot.reply_to(m, statsAdm.format(str(needexp)))
                    db.close()
                else:
                    bot.reply_to(m, "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        else:
            bot.reply_to(m, "–í–≤–µ–¥–∏—Ç–µ /seeprofile [nickname]")
    else:
        bot.reply_to(m, "–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.")
        
        



@bot.message_handler(commands=['changenick'])
def changeNick(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `username` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        if result:
            now = result['username']
            if now == 'None':
                db.close()
                pass
            else:
                bot.reply_to(m, "–£ –≤–∞—Å –Ω–µ –∫—É–ø–ª–µ–Ω–∞ —Å–º–µ–Ω–∞ –Ω–∏–∫–∞")
                db.close()
                return
        else:
            bot.reply_to(m, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !–ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            db.close()
            return
    if len(m.text.split(' ')) > 1:
        nick = m.text.replace('/changenick ', '', 1).replace('@ne_dlt_bot', '', 1)
        db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
        with db.cursor() as cursor:
            sql = "UPDATE `users` SET `username` = %s WHERE `user_id` = %s"
            cursor.execute(sql, (str(nick), m.from_user.id))
            db.commit()
        db.close()
        bot.reply_to(m, "–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –Ω–∏–∫.")
    else:
        bot.reply_to(m, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /changenick [–ù–∏–∫–Ω–µ–π–º]")
        return
        
        
        
        
        
        
        
@bot.message_handler(commands=['next_location'])
def nextLoc(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `lvl`, `local` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        location = int(result['local'])
        lvl = int(result['lvl'])
        if (location == 1) and (lvl >= 5):
            go = bot.reply_to(m, "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–æ–∫–∞—Ü–∏—é ''–¢–∞–∫—Å–æ–ø–∞—Ä–∫''... –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
            time.sleep(5)
            sql = "UPDATE `users` SET `local` = 2 WHERE `user_id` = %s"
            cursor.execute(sql, (m.from_user.id))
            db.commit()
            complete = "–¢–∞–∫—Å–æ–ø–∞—Ä–∫ - –æ–¥–∏–Ω –∏–∑ —Ç–µ—Ö –Ω–µ–º–Ω–æ–≥–∏—Ö —Ä–∞–π–æ–Ω–æ–≤, –≥–¥–µ –æ–±–∏—Ç–∞–µ—Ç –∫—É—á–∞ –±–∞–Ω–¥–∏—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–≥—É–ª–∏–≤–∞—é—Ç –≤ –º–∞—Å–∫–∞—Ö, —Ç—É—Ä–∏—Å—Ç—ã –¥–µ—Ä—É—Ç—Å—è –∑–∞ —Å–≤–æ–±–æ–¥–Ω–æ–µ —Ç–∞–∫—Å–∏, –∞ –µ—â–µ —Ç—É—Ç –ø–æ–ø–∞–¥–∞–µ—Ç—Å—è –æ–∂–∏–≤—à–∏–π –±–∞–Ω–∫–æ–º–∞—Ç. –°–º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å—Å—è –æ—Ç—Å—é–¥–∞ –∂–∏–≤—ã–º?"
            bot.edit_message_text(complete, go.chat.id, go.message_id)
        elif (location == 2) and (lvl >= 7):
            go = bot.reply_to(m, "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–æ–∫–∞—Ü–∏—é ''Dungeon''... –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
            time.sleep(5)
            sql = "UPDATE `users` SET `local` = 3 WHERE `user_id` = %s"
            cursor.execute(sql, (m.from_user.id))
            db.commit()
            complete = "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—à–ª–∏ –≤ –ª–æ–∫–∞—Ü–∏—é ''Dungeon''."
            bot.edit_message_text(complete, go.chat.id, go.message_id)
        elif (location == 3) and (lvl >= 8):
            go = bot.reply_to(m, "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–æ–∫–∞—Ü–∏—é ''–ú—ç—Ä–∏—è''... –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
            time.sleep(5)
            sql = "UPDATE `users` SET `local` = 4 WHERE `user_id` = %s"
            cursor.execute(sql, (m.from_user.id))
            db.commit()
            complete = "–ú—ç—Ä–∏—è... –ö–∞–∑–∞–ª–æ—Å—å –±—ã, —Ü–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞, –∫–∞–∫–∏–µ —Ç—É—Ç –º–æ–≥—É—Ç –±—ã—Ç—å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏? –ú–æ–≥—É—Ç, –µ—â–µ –∫–∞–∫. –ù–µ–∞–¥–µ–∫–≤–∞—Ç–Ω—ã–π –≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä, –∫—É—á–∫–∞ –±—ã–≤—à–∏—Ö –≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä–æ–≤, –Ω–µ–º–∞–ª–æ –≤–ª–∏—è—Ç–µ–ª—å–Ω—ã—Ö –ª—é–¥–µ–π –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä–∞—Ö - –≤—Å–µ —ç—Ç–æ —Ç—É—Ç. –†–µ–±—è—Ç–∞ —Ç—É—Ç —Å–µ—Ä—å—ë–∑–Ω–µ–µ —á–µ–º –≤ —Ç–∞–∫—Å–æ–ø–∞—Ä–∫–µ, –∏–±–æ —Ç—É—Ç - —Å–∞–º—ã–µ –≤–ª–∏—è—Ç–µ–ª—å–Ω—ã–µ –ª—é–¥–∏ —à—Ç–∞—Ç–∞."
            bot.edit_message_text(complete, go.chat.id, go.message_id)
        elif (location == 4) and (lvl >= 10):
            go = bot.reply_to(m, "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–æ–∫–∞—Ü–∏—é ''–∫–∞–∑–∏–Ω–æ''... –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
            time.sleep(5)
            sql = "UPDATE `users` SET `local` = 5 WHERE `user_id` = %s"
            cursor.execute(sql, (m.from_user.id))
            db.commit()
            complete = "–ï—Å–ª–∏ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ –≤–µ—Å—å –∫–æ—à–º–∞—Ä –ø–æ–∑–∞–¥–∏ - –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ! –ó–¥–µ—Å—å –Ω–∞ –∫–æ–Ω —Å—Ç–∞–≤—è—Ç –Ω–µ –¥–µ–Ω—å–≥–∏ - –∂–∏–∑–Ω—å. –ü—Ä–æ—Å—Ç–∏—Ç—É—Ü–∏—è, –∫—Ä–∏–º–∏–Ω–∞–ª –∏ –¥–µ–Ω—å–≥–∏ - –≤—Å–µ —ç—Ç–æ —Ç—É—Ç."
            bot.edit_message_text(complete, go.chat.id, go.message_id)
        else:
            bot.reply_to(m, "–°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ —Å–≤–æ–∏ –¥–µ–ª–∞ –≤ —ç—Ç–æ–π –ª–æ–∫–∞—Ü–∏–∏!")
        db.close()