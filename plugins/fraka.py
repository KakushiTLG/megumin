#1 - —Å–æ–∑–¥–∞—Ç–µ–ª—å
#2 - —é–∑–µ—Ä
#0 - –Ω–∏–∫—Ç–æ
#3 –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π
@bot.message_handler(commands=['fraka_help'])
def frakaHelp(m):
    frakaInfo = "–§—Ä–∞–∫—Ü–∏—è - –º–µ—Å—Ç–æ –≥–¥–µ –∏–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç —Å–ø–ª–æ—Ç–∏—Ç—å—Å—è –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ–∏–Ω—Ç—ã –≤–º–µ—Å—Ç–µ."
    frakaInfo += "–ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é, –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è —Ñ—Ä–∞–∫—Ü–∏–∏."
    frakaInfo += "–í–æ —Ñ—Ä–∞–∫—Ü–∏—è—Ö –∑–∞–ø—Ä–µ—â–µ–Ω –¢–∏–º–ö–∏–ª–ª (–Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –Ω–∞ –±–∏—Ç–≤—ã), –∑–∞—Ç–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É—è –≤ —Ñ–æ–Ω–¥ —Ñ—Ä–∞–∫—Ü–∏–∏, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫. \n–°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–µ–π —Ñ—Ä–∞–∫—Ü–∏—Ç –ø–ª–∞—Ç–Ω–æ–µ –∏ —Å—Ç–æ–∏—Ç 5000pts. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—Ä–∞–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /fcreate"
    bot.reply_to(m, frakaInfo)


@bot.message_handler(commands=['fcreate'])
def frakaCreate(m):
    if len(m.text.split(' ')) > 1:
        pass
    else:
        bot.reply_to(m, "–í–≤–µ–¥–∏—Ç–µ /fcreate [–∏–º—è –∂–µ–ª–∞–µ–º–æ–π —Ñ—Ä–∞–∫—Ü–∏–∏]]")
        return
    fname = m.text.replace('/fcreate ', '', 1)
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `points` , `lvl` , `frakaName` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        points = int(result['points'])
        lvl = int(result['lvl'])
        frakaName = result['frakaName']
        if frakaName:
            bot.reply_to(m, "–í—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏!")
            return
        else:
            pass
        if points < 5000:
            bot.reply_to(m, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—Ä–∞–∫—Ü–∏–∏!")
            return
        else:
            pass
        if lvl < 5:
            bot.reply_to(m, "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–æ–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –º–∏–Ω–∏–º—É–º 10 —É—Ä–æ–≤–µ–Ω—å.")
            return
        else:
            pass
        sql = "UPDATE `users` SET `points` = points - 5000 WHERE `user_id` = %s"
        cursor.execute(sql, (str(m.from_user.id)))
        db.commit()
        sql = "UPDATE `users` SET `frakaName` = %s WHERE `user_id` = %s"
        cursor.execute(sql, (str(fname), str(m.from_user.id)))
        db.commit()
        sql = "UPDATE `users` SET `frakaStatus` = 1 WHERE `user_id` = %s"
        cursor.execute(sql, (str(m.from_user.id)))
        db.commit()
        sql = "INSERT INTO `fraks` (`name`, `desc`) VALUES (%s, '/fedit_desc')"
        cursor.execute(sql, (str(fname)))
        db.commit()
        bot.reply_to(m, "–§—Ä–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–¥—É–º–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏ –∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Ç—É–¥–∞ –∏–≥—Ä–æ–∫–æ–≤! /finfo - —Å–ø—Ä–∞–≤–∫–∞")
        db.close()
        
        
        
        
@bot.message_handler(commands=['finfo'])
def fHelp(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaStatus` , `frakaName` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        frakaStatus = result['frakaStatus']
        frakaName = result['frakaName']
        if frakaName:
            pass
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        if frakaStatus == 1:
            bot.reply_to(m, "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è —Ñ—Ä–∞–∫—Ü–∏–∏: \n/fedit_name - –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏ \n/fedit_desc - –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏\n/f_invite - –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é. \n/f_players - —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤ –≤–∞—à–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏ \n/f_uninvite - –≤—ã–≥–Ω–∞—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–∑ —Ñ—Ä–∞–∫—Ü–∏–∏\n –í–ù–ò–ú–ê–ù–ò–ï! –°–º–µ–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ—Ä–∞–∫—Ü–∏–∏ –ø–ª–∞—Ç–Ω–∞—è –∏ —Å—Ç–æ–∏—Ç 10000 pts , —Å—É–º–º–∞ —Å–Ω–∏–º–∞–µ—Ç—Å—è —Å —Ñ–æ–Ω–¥–∞ —Ñ—Ä–∞–∫—Ü–∏–∏!\n/f_profile - —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏; \n/fpay - –≤–∑–Ω–æ—Å –≤ —Ñ–æ–Ω–¥ —Ñ—Ä–∞–∫—Ü–∏–∏")
            return
        elif frakaStatus == 2:
            bot.reply_to(m, "n–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ñ—Ä–∞–∫—Ü–∏–∏: \n/f_profile - —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏; \n/fpay - –≤–∑–Ω–æ—Å –≤ —Ñ–æ–Ω–¥ —Ñ—Ä–∞–∫—Ü–∏–∏")
        elif fkaraStatus == 0:
            bot.reply_to(m, "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏.")



finfo_msg = []

@bot.message_handler(commands=['f_profile'])
def fInfo(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus`, `frakaFond` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = result['frakaStatus']
        frakaFond = result['frakaFond']
        if int(frakaStatus) >= 1:
            pass
        elif int(frakaStatus) == 3:
            bot.reply_to(m, "–í—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø—Ä–æ—Ñ–∏–ª–µ–º.")
            db.close()
            return
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        if result:
            pass
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        sql = "SELECT * FROM `fraks` WHERE `name` = %s"
        cursor.execute(sql, (frakaName))
        frakainfo = cursor.fetchone()
        db.close()
        name = frakaName
        desc = frakainfo['desc']
        players = frakainfo['players']
        fond = frakainfo['fond']
        lvl = frakainfo['lvl']
        warStatus = int(frakainfo['warStatus'])
        warFraka = frakainfo['warFraka']
        warPts = int(frakainfo['warPts'])
        playersmax = int(lvl) * 2
        fondmax = int(lvl) * 1500
        needptsLvlup = int(lvl) * 750
        notif = ""
        if warStatus == 1:
            notif += "‚ö†Ô∏è–ò–¥—ë—Ç –≤–æ–π–Ω–∞ —Å —Ñ—Ä–∞–∫—Ü–∏–µ–π\n ''{}''‚ö†Ô∏è\n‚ÑπÔ∏è–§—Ä–∞–∫—Ü–∏–æ–Ω–Ω—ã–µ –æ—á–∫–∏: {}‚ÑπÔ∏è".format(warFraka, str(warPts))
        elif warStatus == 2:
            notif += "‚ö†Ô∏è–û–∂–∏–¥–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è —Ñ—Ä–∞–∫—Ü–∏–∏\n ''{}'' –ø–æ –ø–æ–≤–æ–¥—É –≤–æ–π–Ω—ã".format(warFraka)
        elif warStatus == 3:
            notif += "‚ö†Ô∏è–§—Ä–∞–∫—Ü–∏—è ''{}'' –≤—ã–∑—ã–≤–∞–µ—Ç –≤–∞—Å –Ω–∞ –±–æ–π. \n     /fw_accept - –ø—Ä–∏–Ω—è—Ç—å;          /fw_cancel - –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è".format(warFraka)
        else:
            pass
        if int(fond) >= int(needptsLvlup):
            notif += "\n‚ö†Ô∏è–î–æ—Å—Ç—É–ø–Ω–æ –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Ñ—Ä–∞–∫—Ü–∏–∏ –∑–∞ " + str(needptsLvlup) + " pts. –ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —É–≤–µ–ª–∏—á–∏—Ç –ª–∏–º–∏—Ç –Ω–∞ –∏–≥—Ä–æ–∫–æ–≤ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏, –∞ —Ç–∞–∫ –∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã–π —Ñ–æ–Ω–¥. /f_lvlup –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è.‚ö†Ô∏è"
        else:
            notif += ""
        if (frakaStatus == 2):
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏', callback_data="f_players"))
            finfo = "‚ÑπÔ∏è–ù–∞–∑–≤–∞–Ω–∏–µ: " + str(name) + "‚ÑπÔ∏è"
            finfo += "\n‚ñ∂Ô∏è–û–ø–∏—Å–∞–Ω–∏–µ: " + str(desc) + "‚óÄÔ∏è\n \n"
            finfo += "\nüìå–£—Ä–æ–≤–µ–Ω—å: " + str(lvl) + "üìå"
            finfo += "\n‚ôªÔ∏è–ò–≥—Ä–æ–∫–æ–≤: " + str(players) + "/" + str(playersmax) + "‚ôªÔ∏è"
            finfo += "\nüí∞–§–æ–Ω–¥ —Ñ—Ä–∞–∫—Ü–∏–∏: " + str(fond) + "/" + str(fondmax) + "ptsüí∞"
            finfo += "\nüíµ–í–∞—à –≤–∫–ª–∞–¥: " +str(frakaFond) + " ptsüíµ \n" + str(notif)
            bot.reply_to(m, finfo, reply_markup=markup)
        elif (warStatus == 0) and (frakaStatus == 1):
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–ü–∞–Ω–µ–ª—å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è', callback_data="leader_panel"))
            markup.add(InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏', callback_data="f_players"))
            finfo = "\n‚ÑπÔ∏è–ù–∞–∑–≤–∞–Ω–∏–µ: " + str(name) + "‚ÑπÔ∏è"
            finfo += "\n‚ñ∂Ô∏è–û–ø–∏—Å–∞–Ω–∏–µ: " + str(desc) + "‚óÄÔ∏è\n \n"
            finfo += "\nüìå–£—Ä–æ–≤–µ–Ω—å: " + str(lvl) + "üìå"
            finfo += "\n‚ôªÔ∏è–ò–≥—Ä–æ–∫–æ–≤: " + str(players) + "/" + str(playersmax) + "‚ôªÔ∏è"
            finfo += "\nüí∞–§–æ–Ω–¥ —Ñ—Ä–∞–∫—Ü–∏–∏: " + str(fond) + "/" + str(fondmax) + "ptsüí∞"
            finfo += "\nüíµ–í–∞—à –≤–∫–ª–∞–¥: " +str(frakaFond) + " ptsüíµ \n" + str(notif)
            finfo_m = bot.reply_to(m, finfo, reply_markup=markup)
        elif (frakaStatus == 1):
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–ü–∞–Ω–µ–ª—å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è', callback_data="leader_panel"))
            markup.add(InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏', callback_data="f_players"))
            finfo = "‚ÑπÔ∏è–ù–∞–∑–≤–∞–Ω–∏–µ: " + str(name) + "‚ÑπÔ∏è"
            finfo += "\n‚ñ∂Ô∏è–û–ø–∏—Å–∞–Ω–∏–µ: " + str(desc) + "‚óÄÔ∏è\n \n"
            finfo += "\nüìå–£—Ä–æ–≤–µ–Ω—å: " + str(lvl) + "üìå"
            finfo += "\n‚ôªÔ∏è–ò–≥—Ä–æ–∫–æ–≤: " + str(players) + "/" + str(playersmax) + "‚ôªÔ∏è"
            finfo += "\nüí∞–§–æ–Ω–¥ —Ñ—Ä–∞–∫—Ü–∏–∏: " + str(fond) + "/" + str(fondmax) + "ptsüí∞"
            finfo += "\nüíµ–í–∞—à –≤–∫–ª–∞–¥: " +str(frakaFond) + " ptsüíµ \n" + str(notif)
            bot.reply_to(m, finfo)
            
            
@bot.callback_query_handler(func=lambda call: call.data.startswith('leader_panel'))
def leadPanel(call): 
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton('–í–æ–π–Ω—ã', callback_data="WAR"))
    markup.add(InlineKeyboardButton('–û—Ç—á–∏—Å–ª–µ–Ω–∏—è', callback_data="payPlayers"))
    markup.add(InlineKeyboardButton('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å', callback_data="invite"))
    markup.add(InlineKeyboardButton('–í—ã–≥–Ω–∞—Ç—å', callback_data="funinvite"))
   # markup.add(InlineKeyboardButton('–ü—Ä–æ–¥–∞—Ç—å —Ñ—Ä–∞–∫—Ü–∏—é', callback_data="sellfraka"))
    text = "\n       üî∞–ü–∞–Ω–µ–ª—å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—èüî∞\n"
    text += "–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–∞–Ω–µ–ª–∏:\n"
    text += "–í–æ–π–Ω—ã - –ø–∞–Ω–µ–ª—å –Ω–∞–ø–∞–¥–µ–Ω–∏—è –Ω–∞ –¥—Ä—É–≥—É—é —Ñ—Ä–∞–∫—Ü–∏—é\n"
    text += "–û—Ç—á–∏—Å–ª–µ–Ω–∏—è - –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –∏–∑ —Ñ–æ–Ω–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Ñ—Ä–∞–∫—Ü–∏–∏\n"
    text += "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å - –ø–∞–Ω–µ–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤ —Å–≤–æ—é —Ñ—Ä–∞–∫—Ü–∏—é\n"
    text += "–í—ã–≥–Ω–∞—Ç—å - –ø–∞–Ω–µ–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ –≤—ã–≥–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Ñ—Ä–∞–∫—Ü–∏–∏\n"
    text += "(–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ)–ü—Ä–æ–¥–∞—Ç—å —Ñ—Ä–∞–∫—Ü–∏—é - –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å —Å–≤–æ—é —Ñ—Ä–∞–∫—Ü–∏—é –∏–≥—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∏ –≤ –æ–¥–Ω–æ–π –∏–∑ —Ñ—Ä–∞–∫—Ü–∏–π"
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('WAR'))
def WAR_fraka(call): 
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (str(call.message.reply_to_message.from_user.id)))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = int(result['frakaStatus'])
        if frakaStatus == 1:
            pass
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        sql = "SELECT `warStatus` FROM `fraks` WHERE `name` = %s"
        cursor.execute(sql, (frakaName))
        result = cursor.fetchone()
        warStatus = int(result['warStatus'])
        if warStatus != 0:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
            return
        else:
            pass
        sql = "SELECT `id` FROM `fraks` WHERE `name` = %s"
        cursor.execute(sql, (frakaName))
        result = cursor.fetchone()
        myfrak = int(result['id'])
        sql = "SELECT `name`, `lvl`, `id` FROM `fraks` WHERE `id` != %s"
        cursor.execute(sql, (myfrak))
        result = cursor.fetchall()
        db.close()
        spisok = ""
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        for dict in result:
            spisok += str(dict['name']) + " - " + str(dict['lvl']) + "pts \n"
            markup.add(InlineKeyboardButton(str(dict['name']), callback_data="clanwar_{}".format(dict['id'])))
        text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—Ä–∞–∫—Ü–∏—é, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –Ω–∞–ø–∞—Å—Ç—å: \n" + str(spisok)
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        
        
    

@bot.callback_query_handler(func=lambda call: call.data.startswith('clanwar_'))
def clanwar(call):
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    clanwar_id = call.data.split('_')
    clanwarid = clanwar_id[1]
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (str(call.from_user.id)))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        sql = "SELECT `name` FROM `fraks` WHERE `id` = %s"
        cursor.execute(sql, (clanwarid))
        result = cursor.fetchone()
        frakaEnemy = result['name']
        sql = "UPDATE `fraks` SET `warStatus` = 2 WHERE `name` = %s"
        cursor.execute(sql, (frakaName))
        db.commit()
        sql = "UPDATE `fraks` SET `warFraka` = %s WHERE `name` = %s"
        cursor.execute(sql, (frakaEnemy, frakaName))
        db.commit()
        sql = "UPDATE `fraks` SET `warStatus` = 3 WHERE `name` = %s"
        cursor.execute(sql, (frakaEnemy))
        db.commit()
        sql = "UPDATE `fraks` SET `warFraka` = %s WHERE `name` = %s"
        cursor.execute(sql, (frakaName, frakaEnemy))
        db.commit()
        sql = "SELECT `user_id` FROM `users` WHERE `frakaStatus` = 1 AND `frakaName` = %s"
        cursor.execute(sql, (frakaEnemy))
        result = cursor.fetchone()
        ownerFrakaEnemy = result['user_id']
        db.close()
    text = "–í—ã –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤ —Ñ—Ä–∞–∫—Ü–∏–∏ ''{}''! –ó–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ—Ç–≤–µ—Ç–∞ –Ω–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –ø—Ä–æ—Ñ–∏–ª–µ–º —Ñ—Ä–∞–∫—Ü–∏–∏.".format(frakaEnemy)
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    bot.send_message(ownerFrakaEnemy, "–í–∞—à—É —Ñ—Ä–∞–∫—Ü–∏—é –≤—ã–∑–≤–∞–ª–∏ –Ω–∞ –≤–æ–π–Ω—É. –ó–∞–ø—Ä–æ—Å –æ—Ç —Ñ—Ä–∞–∫—Ü–∏–∏ ''{}''".format(frakaName))

    
    
    
@bot.callback_query_handler(func=lambda call: call.data.startswith('payPlayers'))
def payPlayers(call): 
    if (call.message.reply_to_message.from_user.id == call.from_user.id):
        pass
    else:
        bot.reply_to(call.message.chat.id, "–í–æ—Ç –ø–æ—ç—Ç–æ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –ø—Ä–æ—Å—è—Ç —Ç–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–µ–ª–∞—Ç—å –≤ –ª—Å... –í–æ—Ç @" + str(call.from_user.username) + " –ø–æ–ø—ã—Ç–∞–æ—Å—è –∫–ª–∞—Ü–Ω—É—Ç—å.")
        return
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (call.message.reply_to_message.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        sql = "SELECT `id`, `username`, `frakaBonus` FROM `users` WHERE `frakaName` = %s AND `frakaStatus` != 3"
        cursor.execute(sql, (frakaName))
        result = cursor.fetchall()
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        spisok = "–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç—á–∏—Å–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –µ–≥–æ –∏–º–µ–Ω–µ–º\n–§–æ—Ä–º–∞—Ç: —é–∑–µ—Ä–Ω–µ–π–º - —Ç–µ–∫—É—â–∏–µ –æ—Ç—á–∏—Å–ª–µ–Ω–∏—è\n"
        for dict in result:
            spisok += str(dict['username']) + " - " + str(dict['frakaBonus']) + "pts \n"
            markup.add(InlineKeyboardButton(str(dict['username']), callback_data="paysTo_{}".format(dict['id'])))
        db.close()
        gg = bot.edit_message_text(spisok, call.message.chat.id, call.message.message_id, reply_markup=markup)
    
    
    
    
    
@bot.callback_query_handler(func=lambda call: call.data.startswith('paysTo_'))
def pay_to_player(call):
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    pays = call.data.split('_')
    pay_to = pays[1]
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `username`, `frakaBonus` FROM `users` WHERE `id` = %s"
        cursor.execute(sql, (pay_to))
        result = cursor.fetchone()
        username = result['username']
        frakaBonus = result['frakaBonus']
        markup = InlineKeyboardMarkup()
        markup.row_width = 5
        db.close()
        text = "–ò–≥—Ä–æ–∫ " + str(username) + " –ø–æ–ª—É—á–∞–µ—Ç —Å —Ñ—Ä–∞–∫—Ü–∏–∏ " + str(frakaBonus) + " pts –≤ —á–∞—Å. –í—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ –¥–æ—Ö–æ–¥, –ø–æ–ª—å–∑—É—è—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ."
        markup.add(InlineKeyboardButton("5", callback_data="playerFrakaPay:5:{}".format(username)), InlineKeyboardButton("10", callback_data="playerFrakaPay:10:{}".format(username)), InlineKeyboardButton("15", callback_data="playerFrakaPay:15:{}".format(username)), InlineKeyboardButton("20", callback_data="playerFrakaPay:20:{}".format(username)), InlineKeyboardButton("25", callback_data="playerFrakaPay:25:{}".format(username)))
        markup.add(InlineKeyboardButton("30", callback_data="playerFrakaPay:30:{}".format(username)), InlineKeyboardButton("35", callback_data="playerFrakaPay:35:{}".format(username)), InlineKeyboardButton("40", callback_data="playerFrakaPay:40:{}".format(username)), InlineKeyboardButton("45", callback_data="playerFrakaPay:45:{}".format(username)), InlineKeyboardButton("50", callback_data="playerFrakaPay:50:{}".format(username)))
        markup.add(InlineKeyboardButton("55", callback_data="playerFrakaPay:55:{}".format(username)), InlineKeyboardButton("60", callback_data="playerFrakaPay:60:{}".format(username)), InlineKeyboardButton("65", callback_data="playerFrakaPay:65:{}".format(username)), InlineKeyboardButton("70", callback_data="playerFrakaPay:75:{}".format(username)), InlineKeyboardButton("75", callback_data="playerFrakaPay:75:{}".format(username)))
        markup.add(InlineKeyboardButton("80", callback_data="playerFrakaPay:80:{}".format(username)),  InlineKeyboardButton("90", callback_data="playerFrakaPay:90:{}".format(username)), InlineKeyboardButton("95", callback_data="playerFrakaPay:95:{}".format(username)), InlineKeyboardButton("100", callback_data="playerFrakaPay:100:{}".format(username)))
        markup.add(InlineKeyboardButton("0", callback_data="playerFrakaPay:0:{}".format(username)))
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)



@bot.callback_query_handler(func=lambda call: call.data.startswith('playerFrakaPay:'))
def playerFrakaPay(call):
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    pays = call.data.split(':')
    pay_to = pays[1]
    payWho = pays[2]
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "UPDATE `users` SET `frakaBonus` = %s WHERE `username` = %s"
        cursor.execute(sql, (pay_to, payWho))
        db.commit()
        db.close()
        print(str(pay_to))
        print(str(payWho))
    text = "–î–æ—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –¢–µ–ø–µ—Ä—å –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç {} pts –≤ —á–∞—Å.".format(str(payWho), str(pay_to))
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    return



@bot.callback_query_handler(func=lambda call: call.data.startswith('invite'))
def f_invite(call): 
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `username`, `id`, `lvl` FROM `users` WHERE `frakaStatus` = 0"
        cursor.execute(sql)
        result = cursor.fetchall()
        markup = InlineKeyboardMarkup()
        markup.row_width = 5
        text = "\n–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø—É—Ç–µ–º –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∏–∫–æ–º –∏–≥—Ä–æ–∫–∞. \n–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –±–µ–∑ —Ñ—Ä–∞–∫—Ü–∏–∏:"
        for dict in result:
            markup.add(InlineKeyboardButton(str(dict['username']), callback_data="playerinvite_{}".format(str(dict['id']))))
            text += "\n" + str(dict['username']) + "- " + str(dict['lvl']) + "lvl"
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        
        
        
@bot.callback_query_handler(func=lambda call: call.data.startswith('playerinvite_'))
def finvite(call): 
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    userj = call.data.split('_')
    user = userj[1]
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaStatus` FROM `users` WHERE `id` = %s"
        cursor.execute(sql, (str(user)))
        check = cursor.fetchone()
        check1 = int(check['frakaStatus'])
        sql = "SELECT `frakaName` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (str(call.message.reply_to_message.from_user.id)))
        result = cursor.fetchone()
        frakaNam = result['frakaName']
        if int(check1) == 0:
            pass
        elif int(check1) == 3:
            text = "–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–æ –æ–¥–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            db.close()
            return
        else:
            text = "–ò–≥—Ä–æ–∫ —Å–æ—Å—Ç–æ–∏—Ç –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            db.close()
            return
        sql = "SELECT `lvl`, `players` FROM `fraks` WHERE `name` = %s"
        cursor.execute(sql, (frakaNam))
        result = cursor.fetchone()
        lvl = int(result['lvl'])
        players = int(result['players'])
        maxPlayers = lvl * 2
        if (players + 1) >= int(maxPlayers):
            text = "–ò–≥—Ä–æ–∫–æ–≤ –≤ –≤–∞—à–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            db.close()
            return
        else:
            pass
        sql = "SELECT `frakaName` FROM `users` WHERE `id` = %s"
        cursor.execute(sql, (user))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        if frakaName != "":
            text = "–ò–≥—Ä–æ–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            db.close()
            return
        else:
            pass
        sql = "UPDATE `users` SET `frakaName` = %s WHERE `id` = %s"
        cursor.execute(sql, (str(frakaNam), user))
        db.commit()
        sql = "UPDATE `users` SET `frakaStatus` = 3 WHERE `id` = %s"
        cursor.execute(sql, (user))
        db.commit()
        text = "–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ –≤ –≤–∞—à—É —Ñ—Ä–∞–∫—Ü–∏—é."
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
        db.close()
        return
    
    
    
@bot.callback_query_handler(func=lambda call: call.data.startswith('funinvite'))
def f_uninvite(call): 
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (str(call.message.reply_to_message.from_user.id)))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        sql = "SELECT `username`, `id` FROM `users` WHERE `frakaName` = %s"
        cursor.execute(sql, (frakaName))
        result = cursor.fetchall()
        markup = InlineKeyboardMarkup()
        markup.row_width = 5
        db.close()
        text = "\n–ö–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Ñ—Ä–∞–∫—Ü–∏–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø—É—Ç–µ–º –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∏–∫–æ–º –∏–≥—Ä–æ–∫–∞. \n–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤ –≤–∞—à–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏:"
        for dict in result:
            markup.add(InlineKeyboardButton(str(dict['username']), callback_data="playeruninvite_{}".format(str(dict['id']))))
            text += "\n" + str(dict['username'])
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)



@bot.callback_query_handler(func=lambda call: call.data.startswith('playeruninvite_'))
def funinvite(call): 
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    userj = call.data.split('_')
    user = userj[1]
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus` FROM `users` WHERE user_id = %s"
        cursor.execute(sql, (call.message.reply_to_message.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = int(result['frakaStatus'])
        cancel = None
        if frakaStatus == 1:
            sql = "SELECT `frakaName` , `username`, `frakaStatus` FROM `users` WHERE `id` = %s"
            cursor.execute(sql, (str(user)))
            result = cursor.fetchone()
            frakaN = result['frakaName']
            userFraka = result['username']
            frakaStatus = result['frakaStatus']
            if frakaN == frakaName:
                pass
            else:
                 text = "–ò–≥—Ä–æ–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≤–∞—à–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏."
                 gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
                 db.close()
                 return
            sql = "UPDATE `users` SET `frakaStatus` = 0 WHERE `id` = %s"
            cursor.execute(sql, (str(user)))
            db.commit()
            sql = "UPDATE `users` SET `frakaName` = %s WHERE id = %s"
            cursor.execute(sql, (cancel, str(user)))
            db.commit()
            sql = "UPDATE `users` SET `frakaBonus` = 0 WHERE id = %s"
            cursor.execute(sql, (str(user)))
            db.commit()
            sql = "UPDATE `users` SET `frakaFond` = 0 WHERE id = %s"
            cursor.execute(sql, (str(user)))
            db.commit()
            if (int(frakaStatus) == 3):
                pass
            else:
                sql = "UPDATE `fraks` SET `players` = players - 1 WHERE name = %s"
                cursor.execute(sql, (str(frakaName)))
                db.commit()
            text = "–í—ã –≤—ã–≥–Ω–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ " + str(userFraka) + " –∏–∑ —Å–≤–æ–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            db.close()
            return
        else:
            text = "–ò—Å–∫–ª—é—á–∞—Ç—å –∏–∑ —Ñ—Ä–∞–∫—Ü–∏–∏ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            db.close()
            return




@bot.callback_query_handler(func=lambda call: call.data.startswith('sellfraka'))
def sellfraka(call): 
    if (call.from_user.id == call.message.reply_to_message.from_user.id):
        pass
    else:
        return
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus` FROM `users` WHERE user_id = %s"
        cursor.execute(sql, (call.message.reply_to_message.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = result['frakaStatus']
        if frakaStatus == 3:
            pass
        else:
            bot.reply_to(call.message, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —Ñ—Ä–∞–∫—Ü–∏–∏.")
            return
        sql = "SELECT `lvl`, `fond`, `players` FROM `fraks` WHERE `name` = %s"
        cursor.execute(sql, (frakaName))
        result = cursor.fetchone()
        lvl = int(result['lvl'])
        fond = int(result['fond'])
        players = int(result['players'])
        countFraka = 3500 + (lvl * 250) + (fond * 0.25) + (players * 150)
        text = "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤–∞—à–∞ —Ñ—Ä–∞–∫—Ü–∏—è —Å—Ç–æ–∏—Ç {} pts. –í—ã–±–µ—Ä–∏—Ç–µ, –∫–æ–º—É –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å —Ñ—Ä–∞–∫—Ü–∏—é".format(str(countFraka))
        sql = "SELECT `username`, `id` FROM `users` WHERE `points` > %s"
        cursor.execute(sql, (countFraka))
        result = cursor.fetchall()
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton("–ó–ê–ö–†–´–¢–¨", callback_data="cancel"))
        for dict in result:
            markup.add(InlineKeyboardButton(str(dict['username']), callback_data="sellFraka_{}".format(str(dict['id']))))
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        db.close()
            




#@bot.callback_query_handler(func=lambda call: call.data.startswith('sellFraka_'))
#def sellfraka(call): 
  #  db = pymysql.connect(host='localhost',
   #                      user='root',
   #                      password='maz1aan16v',                             
  #                       db='Megumin',
  #                       charset='utf8mb4',
  #                       cursorclass=pymysql.cursors.DictCursor)
#    with db.cursor() as cursor:
   #     sql = "UPDATE 
    







@bot.callback_query_handler(func=lambda call: call.data.startswith('cancel'))
def cancel(call): 
    text = "–û—Ç–º–µ–Ω–µ–Ω–æ."
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
	
	
	



@bot.callback_query_handler(func=lambda call: call.data.startswith('f_players'))
def f_players(call): 
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus` FROM `users` WHERE user_id = %s"
        cursor.execute(sql, (call.message.reply_to_message.from_user.id))
        result = cursor.fetchone()
        frakaName = (result['frakaName'])
        sql = "SELECT `username`, `frakaFond`, `lvl` FROM `users` WHERE `frakaName` = %s" 
        cursor.execute(sql, (frakaName))
        result = cursor.fetchall()
        frakaList = "–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –∏ –∏—Ö –≤–∑–Ω–æ—Å—ã: \n"
        for dict in result:
            frakaUser = str(dict['username'])
            frakaFond = int(dict['frakaFond'])
            lvl = int(dict['lvl'])
            frakaList += str(frakaUser) + " - " + str(int(frakaFond)) + " pts, " + str(lvl) + "lvl \n"
        gg = bot.edit_message_text(frakaList, call.message.chat.id, call.message.message_id)
        db.close()






@bot.message_handler(commands=['fpay'])
def frakaPay(m):
    if len(m.text.split(' ')) > 1:
        pass
    else:
        bot.reply_to(m, "/fpay [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤]")
        return
    fpay = m.text.replace('/fpay ', '', 1)
    if int(fpay) > 0:
        pass
    else:
        bot.reply_to(m, "üåö")
        return
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `points`, `frakaName`, `frakaStatus` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        points = int(result['points'])
        frakaName = result['frakaName']
        frakaStatus = result['frakaStatus']
        if frakaName:
            pass
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        if frakaStatus == 3:
            bot.reply_to (m, "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é, –æ–¥–Ω–∞–∫–æ –≤—Å–µ –µ—â–µ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –Ω–µ–π")
            db.close()
            return
        else:
            pass
        if int(fpay) <= points:
            sql = "SELECT `lvl`, `fond` FROM `fraks` WHERE `name` = %s"
            cursor.execute(sql, (frakaName))
            result = cursor.fetchone()
            lvl = int(result['lvl'])
            fond = int(result['fond'])
            maxFond = lvl * 1500
            if (fond + int(fpay)) > maxFond:
                bot.reply_to(m, "–í—ã—à–µ –ª–∏–º–∏—Ç–∞ –ø–æ–ø–æ–ª–Ω—è—Ç—å —Å—á–µ—Ç —Ñ—Ä–∞–∫—Ü–∏–∏ –Ω–µ–ª—å–∑—è.")
                db.close()
                return
            else:
                pass
            sql = "UPDATE `users` SET `points` = points - %s WHERE `user_id` = %s"
            cursor.execute(sql, (int(fpay), str(m.from_user.id)))
            db.commit()
            sql = "UPDATE `fraks` SET `fond` = fond + %s WHERE `name` = %s"
            cursor.execute(sql, (int(fpay), str(frakaName)))
            db.commit()
            sql = "UPDATE `users` SET `frakaFond` = frakaFond + %s WHERE `user_id` = %s"
            cursor.execute(sql, (int(fpay), str(m.from_user.id)))
            db.commit()
            db.close()
            bot.reply_to(m, "–í—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ " + str(fpay) + " pts –≤ —Ñ–æ–Ω–¥ —Å–≤–æ–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏.")
        else:
            bot.reply_to(m, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤.")
            db.close()
            return
            
            
            
            
            
            
@bot.message_handler(commands=['fedit_name'])
def feditName(m):
    if len(m.text.split(' ')) > 1:
        pass
    else:
        bot.reply_to(m, "–í–≤–µ–¥–∏—Ç–µ /fedit_name [–∏–º—è —Ñ—Ä–∞–∫—Ü–∏–∏]")
        return
    fname = m.text.replace('/fedit_name ', '', 1)
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaNams` , `frakaStatus` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = int(result['frakaStatus'])
        if frakaName:
            pass
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        if frakaStatus == 1:
            sql = "SELECT `fond` FROM `fraks` WHERE `name` = %s"
            cursor.execute(sql, (str(frakaName)))
            result = cursor.fetchone()
            fond = int(result['fond'])
            if fond <= 10000:
                sql = "UPDATE `fraks` SET `fond` = fond - 10000 WHERE `name` = %s"
                cursor.execute(sql, (str(frakaName)))
                db.commit()
                sql = "UPDATE `fraks` SET `name` = %s WHERE `name` = %s"
                cursor.execute(sql, (str(fname), str(frakaName)))
                db.commit()
                bot.reply_to(m, "–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏.")
                db.close()
                return
            else:
                bot.reply_to(m, "–í —Ñ–æ–Ω–¥–µ —Ñ—Ä–∞–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")
                db.close()
                return
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω–æ–π —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
                
                
                
                
                
                
@bot.message_handler(commands=['fedit_desc'])
def feditDesc(m):
    if len(m.text.split(' ')) > 1:
        pass
    else:
        bot.reply_to(m, "–í–≤–µ–¥–∏—Ç–µ /fedit_desc [–æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏]")
        return
    fdesc = m.text.replace('/fedit_desc ', '', 1)
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName` , `frakaStatus` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = int(result['frakaStatus'])
        if frakaName:
            pass
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        if frakaStatus == 1:
            sql = "UPDATE `fraks` SET `desc` = %s WHERE `name` = %s"
            cursor.execute(sql, (str(fdesc), str(frakaName)))
            db.commit()
            bot.reply_to(m, "–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω–æ–π —Ñ—Ä–∞–∫—Ü–∏–∏!")
            db.close()
            return
            
            
            
            
            






@bot.message_handler(commands=['f_accept'])
def fAccept(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = int(result['frakaStatus'])
        if frakaStatus == 3:
            sql = "UPDATE `users` SET `frakaStatus` = 2 WHERE `user_id` = %s"
            cursor.execute(sql, (m.from_user.id))
            db.commit()
            sql = "UPDATE `fraks` SET `players` = players + 1 WHERE `name` = %s"
            cursor.execute(sql, (str(frakaName)))
            db.commit()
            bot.reply_to(m, "–í—ã —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç—É–ø–∏–ª–∏ –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é ''" + str(frakaName) + " '' !")
            db.close()
            return
        else:
            bot.reply_to(m, "–í—ã –Ω–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é.")
            db.close()
            return
           
           
           
           
           
@bot.message_handler(commands=['f_cancel'])
def fCancel(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus` FROM `users` WHERE user_id = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = int(result['frakaStatus'])
        cancel = ""
        if frakaStatus == 3:
            sql = "UPDATE `users` SET `frakaStatus` = 0 WHERE `user_id` = %s"
            cursor.execute(sql, (m.from_user.id))
            db.commit()
            sql = "UPDATE `users` SET `frakaName` = %s WHERE user_id = %s"
            cursor.execute(sql, (str(cancel), str(m.from_user.id)))
            db.commit()
            bot.reply_to(m, "–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é ''" + str(frakaName) + " '' .")
            db.close()
            return
        else:
            bot.reply_to(m, "–í—ã –Ω–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é.")
            db.close()
            return
            
            
       
@bot.message_handler(commands=['fw_cancel'])
def fwCancel(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus` FROM `users` WHERE user_id = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = int(result['frakaStatus'])
        cancel = ""
        if frakaStatus == 1:
            pass
        else:
            bot.reply_to(m, "–ü—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–∞–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        sql = "SELECT * FROM `fraks` WHERE `name` = %s"
        cursor.execute(sql, (frakaName))
        result = cursor.fetchone()
        warStatus = int(result['warStatus'])
        warFraka = result['warFraka']
        if warStatus == 3:
            sql = "UPDATE `fraks` SET `warStatus` = 0 AND `warFraka` = %s AND `warPts` = 0 WHERE `name` = %s AND `name` = %s"
            cursor.execute(sql, (str(cancel), frakaName, warFraka))
            db.commit()
            bot.reply_to(m, "–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —Å—Ä–∞–∂–µ–Ω–∏—è.")
            db.close()
        else:
            bot.reply_to(m, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π.")
            return





@bot.message_handler(commands=['fw_accept'])
def fwAccept(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus` FROM `users` WHERE user_id = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = int(result['frakaStatus'])
        cancel = ""
        if frakaStatus == 1:
            pass
        else:
            bot.reply_to(m, "–ü—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–∞–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        sql = "SELECT * FROM `fraks` WHERE `name` = %s"
        cursor.execute(sql, (frakaName))
        result = cursor.fetchone()
        warStatus = int(result['warStatus'])
        warFraka = result['warFraka']
        if warStatus == 3:
            sql = "UPDATE `fraks` SET `warStatus` = 1 WHERE `name` = %s"
            cursor.execute(sql, (frakaName))
            db.commit()
            sql = "UPDATE `fraks` SET `warPts` = 0 WHERE `name` = %s"
            cursor.execute(sql, (frakaName))
            db.commit()
            sql = "UPDATE `fraks` SET `warStatus` = 1 WHERE `name` = %s"
            cursor.execute(sql, (warFraka))
            db.commit()
            sql = "UPDATE `fraks` SET `warPts` = 0 WHERE `name` = %s"
            cursor.execute(sql, (warFraka))
            db.commit()
            bot.reply_to(m, "–í—ã –ø—Ä–∏–Ω—è–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.")
            q = bot.send_message(chancechat, "–ù–∞—á–∞–ª–∞—Å—å –≤–æ–π–Ω–∞ –º–µ–∂–¥—É —Ñ—Ä–∞–∫—Ü–∏–µ–π ''{}'' –∏ ''{}''".format(frakaName, warFraka))
            bot.pin_chat_message(chancechat, q.message_id)
            db.close()
        else:
            bot.reply_to(m, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.")
            return
        
        
        
        
        
        
@bot.message_handler(commands=['f_lvlup'])
def fLvlup(m):
    db = pymysql.connect(host='localhost',
                         user='root',
                         password='maz1aan16v',                             
                         db='Megumin',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    with db.cursor() as cursor:
        sql = "SELECT `frakaName`, `frakaStatus` FROM `users` WHERE `user_id` = %s"
        cursor.execute(sql, (m.from_user.id))
        result = cursor.fetchone()
        frakaName = result['frakaName']
        frakaStatus = result['frakaStatus']
        if frakaStatus == 1:
            pass
        else:
            bot.reply_to(m, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª–µ–º —Ñ—Ä–∞–∫—Ü–∏–∏.")
            db.close()
            return
        sql = "SELECT `lvl` , `fond` FROM `fraks` WHERE `name` = %s"
        cursor.execute(sql, (str(frakaName)))
        result = cursor.fetchone()
        lvl = int(result['lvl'])
        fond = int(result['fond'])
        needfond = lvl * 750
        if int(needfond) <= fond:
            sql = "UPDATE `fraks` SET `lvl` = lvl + 1 WHERE `name` = %s"
            cursor.execute(sql, (frakaName))
            db.commit()
            sql = "UPDATE `fraks` SET `fond` = fond - %s WHERE `name` = %s"
            cursor.execute(sql, (int(needfond), frakaName))
            db.commit()
            db.close()
            bot.reply_to(m, "–£—Ä–æ–≤–µ–Ω—å —Ñ—Ä–∞–∫—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–≤—ã—à–µ–Ω.")
            return
        else:
            db.close()
            bot.reply_to(m, "–í —Ñ–æ–Ω–¥–µ –≤–∞—à–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è.")
            return
            
            
            
            
            
            
            
            
            
            
            
            
            
